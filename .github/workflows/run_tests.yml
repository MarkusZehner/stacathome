name: Run Tests
on:
  push:
    branches:
      - main
    tags:  # ignores tag pushes
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        python-version:
          - "3.11"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install GDAL (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y gdal-bin libgdal-dev
          gdal-config --version  # Verify installation

      - name: Install GDAL (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install gdal
          gdal-config --version  # Verify installation

      - name: Install GDAL (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install gdal
          echo "C:\Program Files\GDAL" >> $GITHUB_PATH  # Ensure GDAL is in PATH
          echo "GDAL_DATA=C:\Program Files\GDAL\gdal-data" >> $GITHUB_ENV
          echo "PROJ_LIB=C:\Program Files\GDAL\projlib" >> $GITHUB_ENV
          gdalinfo --version  # Verify installation

      - name: Setup Environment
        uses: ./.github/actions/setup_environment
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Install Project
        run: |
          pip install .

      - name: Run tests & coverage
        run: |
          coverage run -m pytest --no-header -v test
          coverage report -m -i
          coverage html -i

      - name: Archive coverage results
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: htmlcov
